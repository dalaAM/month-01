"""
    复习
        函数参数核心含义
            实际参数:与形参对应
                位置实参:按顺序
                    序列实参:拆
                关键字实参:按名字
                    字典实参:拆
            形式参数:限制实参传递方式
                默认形参:实参可选
                位置形参:实参必填
                命名关键字形参:必须关键字实参
                不定长:
                    星号元组形参:合
                    双星号字典形参:合

        函数参数核心语法
            实际参数:与形参对应
                位置实参:函数名称(数据1,数据2,数据3)
                    序列实参:函数名称(*序列)
                关键字实参:函数名称(参数1=数据1,参数2=数据2,参数3=数据3)
                    字典实参:函数名称(**字典)

            形式参数:限制实参传递方式
                默认形参:def 函数名称(参数1=默认值1, 参数2=默认值2,参数3=默认值3):
                位置形参: def 函数名称(参数1, 参数2, 参数3):
                命名关键字形参:def 函数名称(*args,参数1=默认值1, 参数2=默认值2)
                             def 函数名称(*,参数1=默认值1, 参数2=默认值2)
                不定长:
                    星号元组形参:def 函数名称(*args)
                    双星号字典形参:def 函数名称(**kwargs)

        函数参数核心价值
            实际参数:传递信息
                位置实参:默认
                    序列实参: 容器思想
                关键字实参 + 默认形参: 可以随意指定参数
                    字典实参: 容器思想
            形式参数:
                默认形参:实参可选
                位置形参:实参必填
                命名关键字形参:提高实参代码可读性
                不定长:
                    星号元组形参:实参数量无限
                    双星号字典形参:实参数量无限
"""


# 1.
# 位置形参
def func01(p1, p2, p3):
    pass


# 位置实参
func01(1, 2, 3)  # 建议


# func01(p2=2, p1=1, p3=3)

# 2.
# 默认形参
def func02(p1=0, p2=0, p3=0):
    pass


# func02(0, 2, 0)
# 关键字实参
func02(p2=2)  # 建议


# 3.
def func03(*args, **kwargs):  # 将多个数据合一个元组
    pass


list01 = [12, 34, 4, 5, 6, 78]  # 传递的数据数量无限制(实参/形参 不变化)
# 序列实参
func03(*list01)  # 将一个容器拆为多个数据

dict01 = {"p1": 1, "p2": 2, "p3": 3}
# 字典实参
func03(**dict01)

# 4. 星号后面的形参是命名关键字形参
def func04(*args,a = 0,b = 0):
    pass


# func04(1,2,3)
func04(1,a=2,b=3)
func04(a=2)

def func05(*,a,b = 0):
    pass

func05(a=1,b=2)
func05(a=1)

# 应用
print("老王",end = " ")
print("老王","老李","老子",sep = "-")
print("老王","老李","老子",sep = "-",end = " ")
# print("老王","老李","老子","-"," ")  如果没有命名关键字形参,代码可读性差
